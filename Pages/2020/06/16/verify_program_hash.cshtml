@page
@model cdv_razor.Pages._2020._06._16.verify_program_hashModel
@{
    ViewData["Title"] = "verify_program_hash";
}

<div class="container text-justify">
    <h1 class="text-center">Verifying File Integrity using Hash Values</h1>
    <h4 class="text-center">
        By Keenan Irvin-Benning | June 16 2020 | Reading Time: 3 min
    </h4>
    <div class="row mt-4">
        With smartphones and the app store concept dominating how average users download new files, downloading files from the internet is much safer than previous years.
        But even in 2020 you still can’t be 100% guaranteed that the downloaded file hasn’t been altered from the original. The site hosting the file could be the culprit,
        the file could have been corrupted during the download process, or worst of all, the file has been affected by malicious software.
    </div>
    <div class="row mt-4 justify-content-center">
        As we increasingly depend on software to handle our daily needs like banking, e-commerce, navigation, asset trading, etc we need tools to be confident the files we download
        are actually the files we intended to download. One way is by checking its digital signature.
    </div>
    <div class="row mt-4">
        Trying to open a file on Windows 10 without a valid digital signature will display a warning message. This is to motivate software publishers to purchase a digital code
        signing certificate to increase user confidence that the requested file hasn’t been tampered with.
    </div>
    <div class="row mt-4">
        But digital code signing certificates are expensive. Another way is by checking a file’s hash value. Every file consists of unique data contained within it. If you apply a hash function to it,
        it returns a string value unique to the file in its current state. If even a single bit is changed the hash function will return a completely different value from the original hopefully alerting
        the user that something is wrong.
    </div>
    <div class="row mt-4">
        You can often find file hash values computed by popular hash algorithms like MD5 and SHA256 listed on website download pages. If you have the listed hash value and want to check the
        integrity of the downloaded file all you need to do is calculate the hash value of the file you downloaded.
    </div>
    <div class="row mt-4">
        There are a number of 3rd party tools that can accomplish this task but fortunately Microsoft has added the hash generating Cmdlet
        <a style="display:contents" href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-filehash" target="_blank" rel="noopener noreferrer">Get-Filehash </a>
        right into PowerShell which comes preinstalled on Windows 10.
        <code class="justify-content-center">
            Get-Filehash -path c:\foo\filename.exe -algorithm SHA1
        </code>
    </div>
    <div class="row mt-4">
        It can generate hashes using SHA1, SHA256, SHA384, SHA512, and MD5.
        <img class="img-fluid" src="~/img/verifyhash.png" alt="" />
    </div>
    <div class="row mt-4">
        You likely don't have to follow these steps on every file you download but with a new data breaches and hacks being annouced what seems like every day it doesn't hurt to have more security focused
        techniques at your fingertips.
    </div>
    <div id="hyvor-talk-view"></div>
</div>


@section Scripts{
    <script type="text/javascript">
        var HYVOR_TALK_WEBSITE = 662; // DO NOT CHANGE THIS
        var HYVOR_TALK_CONFIG = {
            url: false,
            id: false
        };
    </script>
    <script async type="text/javascript" src="//talk.hyvor.com/web-api/embed"></script>
}
