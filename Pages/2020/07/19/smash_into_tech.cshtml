@page
@model cdv_razor.Pages._2020._07._19.smash_into_techModel
@{
    ViewData["Title"] = "smash_into_tech";
}

@{
    ViewData["Title"] = "How to smash into the tech industry - Catalyst Digital Ventures";
    ViewBag.Title = "How to smash into the tech industry";
    ViewBag.Description = "Tips for the aspiring self taught programmer.";
}

<div class="container text-justify">
    <h1 class="text-center">How to smash into the tech industry as a software engineer</h1>
    <h4 class="text-center">
        By Keenan Irvin-Benning | July 19 2020 | Reading Time: 8 min
    </h4>
    <div class="row mt-4">
        One of my first programming mentors was a guy named Sean. I’ve been in the industry since 2012 and worked at companies as large as General Electric and Sean is one of the best programmers I have worked with.
    </div>
    <div class="row mt-4 blogPost">
        <iframe width="560" height="315" src="https://www.youtube.com/embed/T1CowKULMx8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        I learned a great deal from him frontend, backend, databases, security, networking, you name it and to my shock he didn’t earn a computer science degree in fact not even a Bachelor’s as he just went to community college.
        What?!
    </div>
    <div class="row mt-4">
        The story we have been told is you must go college sometimes grad school or higher to obtain the skills high paying jobs are looking for. So, what gives? How did Sean seemingly achieve the American dream even before the rise of coding bootcamps?
    </div>
    <div class="row mt-4">
        Well the beauty lies in the history of this industry. It has always been a culture that strives (keyword: strives) to be a meritocracy.  A culture that focuses on what one can build not your credentials or appearance.
        And although tech has become a mature industry that culture continues to live on and has provided a great second chance opportunity for many including myself.
    </div>
    <div class="row mt-4">
        My journey to software engineering was not traditional. While I gained an affinity for computers earlier than many of my peers, I focused on building them and general operation. My high school mentor hated programming so I naturally hated it too.
    </div>
    <div class="row mt-4 blogPost">
        But as a computer engineering major I eventually had to take a Java course. I didn't think it would be that bad but I barely passed. As comfortable as I was with computers programming was another beast entirely. Or should I say
        the way universities teach programming was. With that bad taste in my mouth I switched majors and avoided programming for years and found a different way to join IT without knowing how to code. Who needs it!
        <img class="blogPic" src="~/img/ge-2012.jpg" alt="" />
    </div>
    <div class="row mt-4">
        I ended up doing software technical support for a large software company called Infor a few years. My role was primarily customer service for IT professionals but at times, I had to work with software engineers doing bug reproduction.
    </div>
    <div class="row mt-4">
        Working so closely with them showed me a two things: 1. No single engineer knows everything and 2. Programming isn't magic it's more like a set of logical rules and patterns that with time and dedication anyone could master.
        I also noticed the power of software and its ability to scale to billions of people in an instant. The future of everything was revolving around it. Suddenly I forgot about my bad experience in college and attacked programming with a new set of eyes.
    </div>
    <div class="row mt-4">
        That was 6 years ago and since then I have worked on a number of software engineering projects supporting hundreds of thousands of users. Getting here wasn’t easy. Software engineering is incredibly hard and time consuming.
        They wouldn’t offer the salaries you’ve heard of if it wasn’t. I worked my ass off and if this is something you want you will too.
    </div>
    <div class="row mt-4">
        But I learned alot of things the hard way. If I could start all over again, knowing what I know now, how would I go about gaining the skills to confidently jump into programming? That is the question I’m hoping to answer in this post.
    </div>
    <div class="row mt-4">
        <h2>Learn</h2>
        When jumping into a new field especially one as big as software engineering its natural to feel overwhelmed initially.
        Sites like <a style="display:contents" href="https://roadmap.sh/roadmaps " target="_blank" rel="noopener noreferrer">RoadMap.sh</a> do a great job in breaking down the different roles and the skills needed to be considered effective in 2020.
        But they also do a great job in causing anxiety once you realize there’s are so many topics to understand.
    </div>
    <div class="row mt-4">
        Don’t worry. No one is expecting you to master anything overnight. Overtime you will develop what one of my favorite Youtuber <a style="display:contents" href="https://www.youtube.com/user/killerphp" target="_blank" rel="noopener noreferrer">Stefan Mischook</a>
        call "nerd eyes". But in the beginning your focus should be on building a fundamental foundation. Then and only then should you slowly expand out to new more advanced topics.
    </div>
    <div class="row mt-4">
        Fortunately, there are many resources available to help you build that foundation. The best I’ve found are online courses like  <a style="display:contents" href="https://www.freecodecamp.org/" target="_blank" rel="noopener noreferrer">freeCodeCamp</a>
        and <a style="display:contents" href="https://www.coursera.org/" target="_blank" rel="noopener noreferrer">coursera</a>  which are both free and <a style="display:contents" href="https://www.pluralsight.com/" target="_blank" rel="noopener noreferrer">Pluralsight</a>
        and <a style="display:contents" href="https://www.udemy.com/" target="_blank" rel="noopener noreferrer">Udemy</a> which are paid.
    </div>
    <div class="row mt-4">
        Alternatively, if you find any of these courses don’t provide you with the immersion you need then you can take it to another level and take a full-blown coding bootcamp.
        These are usually 12 to 16-week full time courses that will train you from scratch to be a full-time web developer. Why web developer? Because it has the largest demand and lowest barrier of entry of the different fields of
        software.
    </div>
    <div class="row mt-4">
        These courses will provide you the structure and focus randomly searching the web can’t give you. And while you’ll likely still find the same answers searching on your own, an online course can cut your time searching by months or years.
        And while learning the skills are important don’t overdo it initially. You want to learn just enough to be dangerous then the real fun happens.
    </div>
    <div class="row mt-4">
        <h2>Play</h2>
        Once you have learned enough to get started now its time to let your curiosity take over. So, you know the basics of an HTML document. You learned that a b tag makes the text bold. What would an i tag do?
        Is there an underline tag? How do you make bullet points? How do I change the text's color? Do I have to type this everywhere or is there a better way?
    </div>
    <div class="row mt-4">
        These are the type of questions that should naturally come to you as you play with new technology.
        Take note of the questions you ask yourself and slowly but surely find the answers to them. This in my opinion is more effective then just being told how to do something.
        You are letting your curiosity guide what you learn.
    </div>
    <div class="row mt-4">
        <h2>Learn</h2>
        Unfortunately, curiosity can only take you so far. It’s at that point you should redirect your focus back on your courses. This is when the structured approach of learning new topics really starts showing its value.
        It keeps you focused on the 80% that truly matter ensuring you don’t navigate too far out into deep end of programming.
    </div>
    <div class="row mt-4">
        This field is wide and deep and while you will be expected to have deep knowledge eventually, in the beginning seeking depth can take us away from initial goal while at the same time trick us into thinking we are being productive.
        Trying to learn <a style="display:contents" asp-page="/2020/06/28/consider_vue">Vue.js</a> before you know what a for loop is is probably not the best use of your time.
    </div>
    <div class="row mt-4">
        <h2>Teach</h2>
        After you have successfully built something you are proud of whether that be a website, a trading bot, file renaming script, mobile app, etc. immediately add it to your <a style="display:contents" href="https://youtu.be/nrWGr2OvBD4" target="_blank" rel="noopener noreferrer">portfolio.</a>
        Then you should solidify your knowledge and the best way I know how to do that is by teaching others. The beauty of teaching is it forces you to collect your thoughts in a structured way. 
    </div>
    <div class="row mt-4">
        And fear of embarrassment will motivate you to ensure you fully understand the topic you are trying to teach. And while teaching those nearby is a good start, this is where creating blog posts, YouTube videos, social media posts become invaluable tools in your journey.
    </div>
    <div class="row mt-4">
        They give you exposure outside your sphere of influence and also provide you a way to document your journey. They also show potential clients and employers your level of competence. Imagine how much easier a job interview will be if the interviewer watches your
        YouTube channel.
    </div>
    <div class="row mt-4">
        <h2>Think Long Term</h2>
        It will take time to absorb of all this. The more you learn about the field the more impossible to master it all will feel. Remember, mastery isn’t the goal competence is. Six years in, I still sometimes feel overwhelm with everything the industry expects me to know.
    </div>
    <div class="row mt-4">
        But I’ve learned that with time you’ll slowly master what is naturally interesting to you whether that be Front-End, Back-End, Mobile, DevOps, Networking, Cyber Security, Blockchain, etc while gaining basic knowledge on other topics in the field.
    </div>
    <div class="row mt-4">
        <h2>Summary</h2>
        I hope these tips provide some value to you as you navigate the ever-changing world of technology. This isn’t an easy field to stay relevant in. You must embrace the challenge and find ways to keep it interesting to you.
    </div>
    <div class="row mt-4">
        Find someone in your circle that can mentor you. Follow thoughts leaders on Twitter, watch college lectures and tech tutorial videos on YouTube, make an account on websites like
        <a style="display:contents" href="https://stackoverflow.com/" target="_blank" rel="noopener noreferrer">StackOverFlow</a>, find some timeless books and blogs on programming that you can always reference like
        <a style="display:contents" href="https://amzn.to/32s5trk" target="_blank" rel="noopener noreferrer">The Complete Software Developer's Career Guide</a> by John Sonmez,
        and the <a style="display:contents" href="https://amzn.to/39bWmMw" target="_blank" rel="noopener noreferrer">Pragmatic Programmer</a> by David Thomas and Andrew Hunt.
    </div>
    <div class="row mt-4">
        Commit to building real things. Apply the knowledge you gain and use it to build something exciting. <a style="display:contents" href="https://youtu.be/-GB9qKbmGko" target="_blank" rel="noopener noreferrer">Don't get stuck in tutorial hell.</a>
        Sean successfully broke into tech by making programming his passion. Most can’t think like computers naturally so an hour a week won’t cut it. There isn’t a shortage of software engineers there’s a shortage of good ones.
    </div>
    <div class="row mt-4">
        Programming was Sean’s hobby which means he willingly spent many hours a day doing it. If starring at computer screens for several hours a day solving abstract problems isn’t fun for you seriously consider if software engineering is the right career for you.
    </div>
    <div class="row mt-4">
        Its an fulfulling career for sure but tech is more than software engineers. We need Technical Documentation Writers, we need Sales Engineers, we need Graphic Designers, we need IT Helpdesk Analysts, we need Quality Assurance Analysts, we need Business Analysts, UX Designers, 
        Project Managers and much more. If you look you will find a role that fits you.
    </div>
    <div class="row mt-4 blogPost">
        <blockquote class="twitter-tweet" data-theme="dark"><p lang="en" dir="ltr">College degrees are out of reach for many Americans, and you shouldn’t need a college diploma to have economic security. Today we’re announcing Google Career Certificates from <a href="https://twitter.com/hashtag/GrowWithGoogle?src=hash&amp;ref_src=twsrc%5Etfw">#GrowWithGoogle</a> to help job seekers prepare for careers in high-growth fields. <a href="https://t.co/h65QdjWTPC">https://t.co/h65QdjWTPC</a> <a href="https://t.co/6BsRzAY08X">pic.twitter.com/6BsRzAY08X</a></p>&mdash; Google (@@Google) <a href="https://twitter.com/Google/status/1282677217307369474?ref_src=twsrc%5Etfw">July 13, 2020</a></blockquote>
    </div>
    <div class="row mt-4">
        Personally, I couldn’t have found a better industry to dedicate my life to. Well…maybe personal training lol.
    </div>
    <div id="hyvor-talk-view"></div>
</div>


@section Scripts{
    <script type="text/javascript">
        var HYVOR_TALK_WEBSITE = 662; // DO NOT CHANGE THIS
        var HYVOR_TALK_CONFIG = {
            url: false,
            id: false
        };
    </script>
    <script async type="text/javascript" src="//talk.hyvor.com/web-api/embed"></script>
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
}